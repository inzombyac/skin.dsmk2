<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
	<include name="Animation.Common">
		<visible>!Window.IsVisible(script-globalsearch-main.xml) + !Window.IsVisible(script-globalsearch-infodialog.xml) + !Window.IsVisible(DialogAddonInfo.xml) + !Window.IsVisible(DialogPVRRecordingInfo.xml) + !Window.IsVisible(DialogPVRGuideInfo.xml) + !Window.IsVisible(DialogMusicInfo.xml) + !Window.IsVisible(DialogVideoInfo.xml)</visible>
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
			<effect type="zoom" start="50" end="100" time="300" center="auto" tween="quadratic" easing="out" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" end="0" start="100" time="200" tween="sine" easing="out" />
			<effect type="zoom" end="75" start="100" time="200" center="auto" tween="quadratic" easing="in" />
		</animation>
		<animation type="Visible" reversible="false">
			<effect type="fade" start="0" end="100" time="300" delay="300" tween="sine" easing="in" />
			<effect type="zoom" start="115" end="100" time="300" delay="300" center="auto" tween="sine" easing="out" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="zoom" start="100" end="115" center="auto" tween="sine" delay="0" easing="out" time="300" />
			<effect type="fade" start="100" end="0" tween="cubic" easing="out" delay="0" time="300" />
		</animation>
		<animation type="Conditional" reversible="true" condition="Window.IsVisible(DialogPVRRecordingInfo.xml) | Window.IsVisible(DialogPVRGuideInfo.xml) | Window.IsVisible(DialogPictureInfo.xml) | Window.IsVisible(FileBrowser.xml) | Window.IsVisible(DialogProgress.xml) | Window.IsVisible(DialogYesNo.xml) | Window.IsVisible(DialogOK.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogButtonMenu.xml) | ControlGroup(9000).HasFocus()">
			<effect type="zoom" end="95" start="100" time="200" center="auto" tween="quadratic" easing="in" />
		</animation>
	</include>
	<include name="Animation.FadeIn">
		<animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout">Visible</animation>
		<animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout">WindowOpen</animation>
	</include>
	<include name="Animation.DelayFadeIn">
		<animation effect="fade" start="0" end="100" time="550" delay="250" tween="cubic" easing="inout">Visible</animation>
		<animation effect="fade" start="0" end="100" time="550" delay="250" tween="cubic" easing="inout">WindowOpen</animation>
	</include>
	<!-- <include name="Animation.DelayVisibleFade">
		<animation effect="fade" start="100" end="0" time="550" delay="5000" tween="cubic" reversible="false">Hidden</animation>
		<animation effect="fade" start="100" end="0" time="550" delay="5000" tween="cubic" reversible="false">WindowOpen</animation>
		<animation effect="fade" start="0" end="100" time="350" delay="500" tween="cubic" easing="inout" reversible="false">Visible</animation>
	</include> -->
	<!-- <include name="Animation.FadeFromHome">
		<animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout" condition="Window.Previous(home)">WindowOpen</animation>
		<animation effect="fade" end="0" start="100" time="350" tween="cubic" easing="inout" condition="Window.Next(home)">WindowClose</animation>
	</include> -->
	<include name="Animation.ZoomIn">
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
			<effect type="zoom" start="80" end="100" time="300" center="auto" tween="quadratic" easing="out" />
		</animation>
		<animation type="Visible" reversible="false">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
			<effect type="zoom" start="80" end="100" time="300" center="auto" tween="quadratic" easing="out" />
		</animation>
	</include>
	<include name="Animation.SideSlide">
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
			<effect type="slide" start="-466" end="0" time="300" center="auto" tween="quadratic" easing="out" />
		</animation>
		<animation type="Visible" reversible="false">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
			<effect type="slide" start="-466" end="0" time="300" center="auto" tween="quadratic" easing="out" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" start="100" end="00" time="300" tween="sine" easing="in" />
			<effect type="slide" start="0" end="-466" time="300" center="auto" tween="quadratic" easing="out" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="fade" start="100" end="00" time="300" tween="sine" easing="in" />
			<effect type="slide" start="0" end="-466" time="300" center="auto" tween="quadratic" easing="out" />
		</animation>
		<!-- Use to keep visible but hidden -->
		<animation condition="!ControlGroup(9000).HasFocus() + !ControlGroup(9096).HasFocus() + !Control.HasFocus(9091) + !Control.HasFocus(9095)" effect="slide" start="0" end="-466" time="300" center="auto" tween="quadratic" easing="out">Conditional</animation>
	</include>
	<include name="Animation.SideSlideRight">
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
			<effect type="slide" start="466" end="0" time="300" center="auto" tween="quadratic" easing="out" />
		</animation>
		<animation type="Visible" reversible="false">
			<effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
			<effect type="slide" start="466" end="0" time="300" center="auto" tween="quadratic" easing="out" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="fade" start="100" end="00" time="300" tween="sine" easing="in" />
			<effect type="slide" start="0" end="466" time="300" center="auto" tween="quadratic" easing="out" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="fade" start="100" end="00" time="300" tween="sine" easing="in" />
			<effect type="slide" start="0" end="466" time="300" center="auto" tween="quadratic" easing="out" />
		</animation>
	</include>
	<include name="Animation.FadeIn.Delay">
		<animation type="Visible">
			<effect type="fade" start="0" end="100" time="350" delay="300" tween="cubic" easing="inout" />
			<effect type="zoom" start="75" end="100" center="auto" tween="back" time="500" delay="300" />
		</animation>
		<animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout">WindowOpen</animation>
	</include>
	<include name="Animation.FadeIn.Slide">
		<animation type="Visible" reversible="false">
			<effect type="fade" start="0" end="100" time="300" delay="150" />
			<effect type="slide" start="0,-48" end="0" center="auto" tween="back" easing="out" time="450" delay="150" />
		</animation>
		<animation type="WindowOpen" reversible="false">
			<effect type="fade" start="0" end="100" time="300" delay="150" />
			<effect type="slide" start="0,-48" end="0" center="auto" tween="back" easing="out" time="450" delay="150" />
		</animation>
	</include>
	<include name="Animation.SlideUp">
		<animation type="Visible">
			<effect type="fade" start="0" end="100" time="250" delay="0" tween="cubic" easing="inout" />
			<effect type="slide" start="0,48" end="0" center="auto" tween="back" easing="out" time="400" delay="0" />
		</animation>
		<animation type="WindowOpen">
			<effect type="fade" start="0" end="100" time="250" delay="0" tween="cubic" easing="inout" />
			<effect type="slide" start="0,48" end="0" center="auto" tween="back" easing="out" time="400" delay="0" />
		</animation>
	</include>
	<include name="Animation.FadeOut">
		<animation effect="fade" end="0" start="100" time="150">Hidden</animation>
		<animation effect="fade" end="0" start="100" time="150">WindowClose</animation>
	</include>
	<include name="Animation.FurnitureFadeInOut">
		<animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout">Visible</animation>
		<animation effect="fade" end="0" start="100" time="150">Hidden</animation>
	</include>
	<!-- Dialog video info animation -->
	<include name="DialogVideoInfoAnimation">
		<animation condition="Control.HasFocus(50) | Control.HasFocus(5050) | Control.HasFocus(5051)" effect="slide" end="0,-390" start="0,0" time="200">Conditional</animation>
		<animation condition="Control.HasFocus(50) | Control.HasFocus(5050) | Control.HasFocus(5051)" effect="slide" end="-520,0" start="0,0" time="200">Conditional</animation>
	</include>
	<include name="Animation.LongDelayFadeIn">
		<animation effect="fade" end="100" start="0" time="500" delay="2000" tween="cubic" easing="inout" reversible="false">Visible</animation>
		<animation effect="fade" end="100" start="0" time="500" delay="2000" tween="cubic" easing="inout" reversible="false">WindowOpen</animation>
	</include>
	<include name="Animation.Focus">
		<animation effect="zoom" end="107" time="50" center="auto">Focus</animation>
	</include>
	<include name="Animation.EmbyHomeSlide">
		<!-- First widget -->
		<animation condition="
			[Control.HasFocus(4001) | Integer.IsEqual(Container(300).Position,1)] | 
			[Control.HasFocus(4002) | Integer.IsEqual(Container(300).Position,2)] | 
			[Control.HasFocus(4003) | Integer.IsEqual(Container(300).Position,3)] | 
			[Control.HasFocus(4004) | Integer.IsEqual(Container(300).Position,4)] | 
			[Control.HasFocus(4005) | Integer.IsEqual(Container(300).Position,5)] |
			[Control.HasFocus(4006) | Integer.IsEqual(Container(300).Position,6)] |
			[Control.HasFocus(4007) | Integer.IsEqual(Container(300).Position,7)] |
			[Control.HasFocus(4008) | Integer.IsEqual(Container(300).Position,8)] |
			[Control.HasFocus(4009) | Integer.IsEqual(Container(300).Position,9)] |
			[Control.HasFocus(4010) | Integer.IsEqual(Container(300).Position,10)]
		" effect="slide" end="0,-250" start="0,0" time="200">Conditional</animation>
		<!-- Widget 2 -->
		<animation condition="[Control.HasFocus(4002) | Integer.IsEqual(Container(300).Position,2)] + Integer.IsGreater(Container(4001).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<!-- Widget 3 -->
		<animation condition="[Control.HasFocus(4003) | Integer.IsEqual(Container(300).Position,3)] + Integer.IsGreater(Container(4001).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<animation condition="[Control.HasFocus(4003) | Integer.IsEqual(Container(300).Position,3)] + Integer.IsGreater(Container(4002).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<!-- Widget 4 -->
		<animation condition="[Control.HasFocus(4004) | Integer.IsEqual(Container(300).Position,4)] + Integer.IsGreater(Container(4001).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<animation condition="[Control.HasFocus(4004) | Integer.IsEqual(Container(300).Position,4)] + Integer.IsGreater(Container(4002).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4004) | Integer.IsEqual(Container(300).Position,4)] + Integer.IsGreater(Container(4003).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<!-- Widget 5 -->
		<animation condition="[Control.HasFocus(4005) | Integer.IsEqual(Container(300).Position,5)] + Integer.IsGreater(Container(4001).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<animation condition="[Control.HasFocus(4005) | Integer.IsEqual(Container(300).Position,5)] + Integer.IsGreater(Container(4002).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4005) | Integer.IsEqual(Container(300).Position,5)] + Integer.IsGreater(Container(4003).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4005) | Integer.IsEqual(Container(300).Position,5)] + Integer.IsGreater(Container(4004).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<!-- Widget 6 -->
		<animation condition="[Control.HasFocus(4006) | Integer.IsEqual(Container(300).Position,6)] + Integer.IsGreater(Container(4001).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<animation condition="[Control.HasFocus(4006) | Integer.IsEqual(Container(300).Position,6)] + Integer.IsGreater(Container(4002).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4006) | Integer.IsEqual(Container(300).Position,6)] + Integer.IsGreater(Container(4003).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4006) | Integer.IsEqual(Container(300).Position,6)] + Integer.IsGreater(Container(4004).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4006) | Integer.IsEqual(Container(300).Position,6)] + Integer.IsGreater(Container(4005).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<!-- Widget 7 -->
		<animation condition="[Control.HasFocus(4007) | Integer.IsEqual(Container(300).Position,7)] + Integer.IsGreater(Container(4001).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<animation condition="[Control.HasFocus(4007) | Integer.IsEqual(Container(300).Position,7)] + Integer.IsGreater(Container(4002).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4007) | Integer.IsEqual(Container(300).Position,7)] + Integer.IsGreater(Container(4003).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4007) | Integer.IsEqual(Container(300).Position,7)] + Integer.IsGreater(Container(4004).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4007) | Integer.IsEqual(Container(300).Position,7)] + Integer.IsGreater(Container(4005).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4007) | Integer.IsEqual(Container(300).Position,7)] + Integer.IsGreater(Container(4006).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<!-- Widget 8 -->
		<animation condition="[Control.HasFocus(4008) | Integer.IsEqual(Container(300).Position,8)] + Integer.IsGreater(Container(4001).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<animation condition="[Control.HasFocus(4008) | Integer.IsEqual(Container(300).Position,8)] + Integer.IsGreater(Container(4002).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4008) | Integer.IsEqual(Container(300).Position,8)] + Integer.IsGreater(Container(4003).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4008) | Integer.IsEqual(Container(300).Position,8)] + Integer.IsGreater(Container(4004).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4008) | Integer.IsEqual(Container(300).Position,8)] + Integer.IsGreater(Container(4005).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4008) | Integer.IsEqual(Container(300).Position,8)] + Integer.IsGreater(Container(4006).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<animation condition="[Control.HasFocus(4008) | Integer.IsEqual(Container(300).Position,8)] + Integer.IsGreater(Container(4007).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<!-- Widget 9 -->
		<animation condition="[Control.HasFocus(4009) | Integer.IsEqual(Container(300).Position,9)] + Integer.IsGreater(Container(4001).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<animation condition="[Control.HasFocus(4009) | Integer.IsEqual(Container(300).Position,9)] + Integer.IsGreater(Container(4002).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4009) | Integer.IsEqual(Container(300).Position,9)] + Integer.IsGreater(Container(4003).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4009) | Integer.IsEqual(Container(300).Position,9)] + Integer.IsGreater(Container(4004).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4009) | Integer.IsEqual(Container(300).Position,9)] + Integer.IsGreater(Container(4005).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4009) | Integer.IsEqual(Container(300).Position,9)] + Integer.IsGreater(Container(4006).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<animation condition="[Control.HasFocus(4009) | Integer.IsEqual(Container(300).Position,9)] + Integer.IsGreater(Container(4007).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<!-- Widget 10 -->
		<animation condition="[Control.HasFocus(4010) | Integer.IsEqual(Container(300).Position,10)] + Integer.IsGreater(Container(4001).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<animation condition="[Control.HasFocus(4010) | Integer.IsEqual(Container(300).Position,10)] + Integer.IsGreater(Container(4002).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4010) | Integer.IsEqual(Container(300).Position,10)] + Integer.IsGreater(Container(4003).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4010) | Integer.IsEqual(Container(300).Position,10)] + Integer.IsGreater(Container(4004).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4010) | Integer.IsEqual(Container(300).Position,10)] + Integer.IsGreater(Container(4005).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	
		<animation condition="[Control.HasFocus(4010) | Integer.IsEqual(Container(300).Position,10)] + Integer.IsGreater(Container(4006).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<animation condition="[Control.HasFocus(4010) | Integer.IsEqual(Container(300).Position,10)] + Integer.IsGreater(Container(4007).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<!-- <animation condition="[Control.HasFocus(4010) | Integer.IsEqual(Container(300).Position,10)] + Integer.IsGreater(Container(4008).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>
		<animation condition="[Control.HasFocus(4010) | Integer.IsEqual(Container(300).Position,10)] + Integer.IsGreater(Container(4009).NumItems,0)" effect="slide" end="0,-295" start="0,0" time="200">Conditional</animation>	 -->
	</include>
</includes>